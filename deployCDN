#!/usr/bin/env python3
import os
import sys
import threading

KEY = "~/.ssh/id_ed25519.pub"
DNS_NODE = "p5-dns.5700.network"
HTTP_NODES = ["p5-http-a.5700.network" ,"p5-http-b.5700.network", "p5-http-c.5700.network",
                "p5-http-d.5700.network", "p5-http-e.5700.network", "p5-http-f.5700.network", "p5-http-g.5700.network"]
BUILD_SERVER = "cs5700cdnproject.ccs.neu.edu"
ORIGIN_SERVER = "cs5700cdnorigin.ccs.neu.edu"
DNS_FILE_DEPENDENCIES =['dns.py', 'dnsDriver.py', 'dnsserver', 'geo_db.py']

# ./[deploy|run|stop]CDN -p <port> -o <origin> -n <name> -u <username> -i <keyfile>
# ./deployCDN -p 40015 -o cs5700cdnorigin.ccs.neu.edu -n shouldBeDomainName -u team_t -i ~/.ssh/id_ed25519.pub


def parse_args(args_list):
    #print(args_list)
    port, origin_server, domain_name, username, keyfile = None, None, None, None, None

    for i in range(len(args_list)):
        if args_list[i] == "-p":
            port = args_list[i + 1]
        elif args_list[i] == "-o":
            origin_server = args_list[i + 1]
        elif args_list[i] == "-n":
            domain_name = args_list[i + 1]
        elif args_list[i] == "-u":
            username = args_list[i + 1]
        elif args_list[i] == "-i":
            keyfile = args_list[i + 1]

    return port, origin_server, domain_name, username, keyfile

def run_copy_to_dns(file_name,keyfile_path, username_in):
    copy_cmd = f"scp -i {keyfile_path} {file_name} {username_in}@{DNS_NODE}:."
    print(copy_cmd)
    os.system(copy_cmd)
    print(f"Copied {file_name} to {username_in}@{DNS_NODE} ")
    print("--------------------------------------------------\n")

def deploy_dns(domain_name, username, keyfile):
    # SCP file to the dns server and then SSH into dnsserver.py to start the dns
    # copy files to dns server
    print("Deploying DNS Files to DNS Server:\n")

    try:
        copy_cmd = 'cp dnsDriver.py dnsserver'
        os.system(copy_cmd)
        create_exec_cmd = 'chmod u+x dnsserver'
        os.system(create_exec_cmd)
        print("created fresh copy of ./dnsserver exec\n")
    except Exception as e:
        print(e)
        print("Unable to turn dnsDriver.py into a an executable")

    #------------------------------------------------------
    try:
        for file in DNS_FILE_DEPENDENCIES:
            run_copy_to_dns(file, keyfile,username)
    except Exception as e:
        print(e)
        print("Failed to deploy DNS, please check all files present and in main directory\n"
              "Required files:\n"
              "1.) dns.py\n"
              "2.) dnsDriver.py\n"
              "3.) dnsserver\n"
              "4.) geo_db.py\n")
        print("SKIPPING DNS DEPLOY, PROGRAM WILL CONTINUE")

    print("DNS DEPLOYMENT RUN\n-----------------------------------------\n")
    
def deploy_http(username, keyfile):
    # Deploy httpserver to each replica server
    for node in HTTP_NODES:
        print("Deploying to http server:", node)
        scp_command = (
            "scp -i " + keyfile + " httpserver " + username + "@" + node + ":."
        )
        os.system(scp_command)

        ssh_command = (
            "ssh -i "
            + keyfile
            + " "
            + username
            + "@"
            + node
            + " 'chmod 777 /home/"
            + username
            + "/httpserver'"
        )
        os.system(ssh_command)
        print("Completed httpserver deploy to:", node)

def main():
    #TODO add warning if one of the var is NONE
    # add exclusive default arg??
    port, origin_server, domain_name, username, keyfile = parse_args(sys.argv[1:])
    print(port, origin_server, domain_name, username, keyfile)

    deploy_dns(username, keyfile)
    deploy_http(username, keyfile)

main()
